// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using batch_webapi.Data;

namespace batch_webapi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230206081202_AddedRequiredModelClasses")]
    partial class AddedRequiredModelClasses
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("batch_webapi.Data.Models.ACL", b =>
                {
                    b.Property<int>("AclId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("AclId");

                    b.ToTable("ACL");
                });

            modelBuilder.Entity("batch_webapi.Data.Models.Attributes", b =>
                {
                    b.Property<int>("AttributesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AttributesId");

                    b.ToTable("Attributes");
                });

            modelBuilder.Entity("batch_webapi.Data.Models.Batch", b =>
                {
                    b.Property<Guid>("BatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AclId")
                        .HasColumnType("int");

                    b.Property<int>("AttributesId")
                        .HasColumnType("int");

                    b.Property<string>("BusinessUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.HasKey("BatchId");

                    b.HasIndex("AclId")
                        .IsUnique();

                    b.HasIndex("AttributesId")
                        .IsUnique();

                    b.ToTable("Batch");
                });

            modelBuilder.Entity("batch_webapi.Data.Models.ReadGroups", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AclId")
                        .HasColumnType("int");

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GroupId");

                    b.HasIndex("AclId");

                    b.ToTable("ReadGroups");
                });

            modelBuilder.Entity("batch_webapi.Data.Models.ReadUsers", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AclId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("AclId");

                    b.ToTable("ReadUsers");
                });

            modelBuilder.Entity("batch_webapi.Data.Models.Batch", b =>
                {
                    b.HasOne("batch_webapi.Data.Models.ACL", "ACL")
                        .WithOne("Batch")
                        .HasForeignKey("batch_webapi.Data.Models.Batch", "AclId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("batch_webapi.Data.Models.Attributes", "Attributes")
                        .WithOne("Batch")
                        .HasForeignKey("batch_webapi.Data.Models.Batch", "AttributesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ACL");

                    b.Navigation("Attributes");
                });

            modelBuilder.Entity("batch_webapi.Data.Models.ReadGroups", b =>
                {
                    b.HasOne("batch_webapi.Data.Models.ACL", "ACL")
                        .WithMany("ReadGroups")
                        .HasForeignKey("AclId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ACL");
                });

            modelBuilder.Entity("batch_webapi.Data.Models.ReadUsers", b =>
                {
                    b.HasOne("batch_webapi.Data.Models.ACL", "ACL")
                        .WithMany("ReadUsers")
                        .HasForeignKey("AclId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ACL");
                });

            modelBuilder.Entity("batch_webapi.Data.Models.ACL", b =>
                {
                    b.Navigation("Batch");

                    b.Navigation("ReadGroups");

                    b.Navigation("ReadUsers");
                });

            modelBuilder.Entity("batch_webapi.Data.Models.Attributes", b =>
                {
                    b.Navigation("Batch");
                });
#pragma warning restore 612, 618
        }
    }
}
